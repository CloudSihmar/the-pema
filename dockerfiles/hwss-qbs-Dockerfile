# Stage 1: Build
FROM python:3.11.9-alpine3.18 as build

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

RUN apk update \
    && apk add --no-cache gcc musl-dev libffi-dev postgresql-dev build-base bash

WORKDIR /app

RUN python -m venv /app/venv
ENV PATH="/app/venv/bin:$PATH"

COPY requirements.txt /app/

RUN pip install --upgrade pip \
    && pip install -r requirements.txt


    
# Stage 2: Final
FROM python:3.11.9-alpine3.18

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PATH="/app/venv/bin:$PATH"

RUN apk update \
    && apk add --no-cache bash libpq

WORKDIR /app

COPY --from=build /app/venv /app/venv
COPY . /app

RUN python -m venv /app/venv \
    && . /app/venv/bin/activate

RUN rm -rf /app/staticfiles/*

RUN python manage.py collectstatic --noinput

RUN pip install gunicorn
COPY gunicorn.conf.py /app/gunicorn.conf.py

RUN echo -e "https://dl-cdn.alpinelinux.org/alpine/v3.18/main\nhttps://dl-cdn.alpinelinux.org/alpine/v3.18/community" > /etc/apk/repositories

RUN apk add --no-cache nginx
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 8686

CMD ["sh", "-c", "nginx && gunicorn --config /app/gunicorn.conf.py hwss_qbs.wsgi:application"]
